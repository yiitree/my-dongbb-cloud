server:
  port: 8761
  servlet:
    context-path: /eureka

spring:
  application:
    name: eureka-server
  # 增加登录密码，设置登录密码
  security:
    user:
      name: zimug
      password: centerpwd
  # 多网卡环境绑定网卡
#  cloud:
#    inetutils:
#      preferredNetworks:
#        - 192.168
#      ignoredInterfaces:
#        - enp0s3
#        - docker0

eureka:
  instance:
    hostname: peer
#    # 不使用hostname，使用ip
#    instance-id: ${spring.application.name}-${eureka.instance.hostname}:${server.port}
    # 健康检查路径，是因为设置了context-path。默认的健康检查路径是以“/”
#    health-check-url: http://${eureka.instance.hostname}:${server.port}/${server.servlet.context-path}/actuator/health
#  client:
#    #从其他两个实例同步服务注册信息
#    fetch-registry: true
#    #向其他的两个eureka注册当前eureka实例
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://peer2:8761/eureka/eureka/,http://peer3:8761/eureka/eureka/

  # 开启eureka自我保护
  server:
    #    # 自我保护模式，当出现网络分区故障、频繁的开启关闭客户端、eureka在短时间内丢失过多客户端时，会进入自我保护模式，即一个服务长时间没有发送心跳，eureka也不会将其删除，默认为true
    #    enable-self-preservation: true
    #    # eureka server清理无效节点的时间间隔，默认60000毫秒，即60秒
    #    eviction-interval-timer-in-ms: 60000
    #    # 阈值更新的时间间隔，单位为毫秒，默认为15 * 60 * 1000
    #    renewal-threshold-update-interval-ms: 15 * 60 * 1000
    #    # 阈值因子，默认是0.85，如果阈值比最小值大，则自我保护模式开启
    #    renewal-percent-threshold: 0.85
    #    # 清理任务程序被唤醒的时间间隔，清理过期的增量信息，单位为毫秒，默认为30 * 1000
    #    delta-retention-timer-interval-in-ms: 30000
    # 关闭自我保护
    enable-self-preservation: false
    # eureka server清理无效节点的时间间隔，默认60000毫秒，即60秒
    eviction-interval-timer-in-ms: 60000 # 单位毫秒
